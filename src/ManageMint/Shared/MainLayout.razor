@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@darkMode"/>

<MudDialogProvider 
    CloseButton="true"
    CloseOnEscapeKey="false"
    DisableBackdropClick="false"
    MaxWidth="MaxWidth.Medium"
    FullWidth="true"/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Color="Color.Primary" Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="DrawerToggle"/>
        <MudSpacer/>
        <AccessControl/>
        <MudSpacer/>
        <MudIconButton Icon="@icon" Color="Color.Inherit" Edge="Edge.End" OnClick="ToggleMode" Style="justify-self: right"/>
        <MudSpacer/>
        <AppMenu/>
    </MudAppBar>
    <MudDrawer @bind-Open="drawerOpen" Elevation="2" Width="320px">
        <MudButton
            StartIcon="@Icons.Material.Outlined.LibraryBooks"
            EndIcon="@Icons.Material.Outlined.LibraryBooks"
            Href="diary"
            Size="Size.Large"
            >Diaries</MudButton>
        <MudButton
            StartIcon="@Icons.Material.Outlined.PeopleAlt"
            EndIcon="@Icons.Material.Outlined.PeopleAlt"
            Href="people"
            Size="Size.Large">Manage People</MudButton>
    </MudDrawer>
    
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>


@code {
    bool drawerOpen = true;
    bool darkMode = true;
    string icon = Icons.Material.Outlined.LightMode;

    private void DrawerToggle()
    {
        drawerOpen = !drawerOpen;
    }

    private void ToggleMode()
    {
        darkMode = !darkMode;
        icon = darkMode ? Icons.Material.Outlined.LightMode : Icons.Material.Outlined.DarkMode;
    }
}
