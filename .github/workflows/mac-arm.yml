name: Build and Release Apple Silicon

on:
  push:
    branches:
      - main

env:
  DOTNETVERSION: 7.0.x

jobs:
  build:
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: Setup .NET SDK ${{env.DOTNETVERSION}}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version:  '${{env.DOTNETVERSION}}'

      - name: List installed .NET info
        shell: pwsh
        run: dotnet --info

      - name: Install .NET MAUI
        shell: bash
        run: |
          dotnet nuget locals all --clear 
          dotnet workload install maui --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json --source https://api.nuget.org/v3/index.json
          dotnet workload install android ios maccatalyst tvos macos maui wasm-tools --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json --source https://api.nuget.org/v3/index.json

      - name: Restore nuget packages
        run: dotnet restore ManageMint.sln
        
        # https://docs.microsoft.com/en-us/dotnet/maui/macos/deployment/overview
      - name : Build MacCatalyst App
        shell: bash
        run: |
          cd src
          dotnet build -f net7.0-maccatalyst -c Release -o ./artifacts
          dotnet publish -f net7.0-maccatalyst -c Release -p:BuildIpa=True -o ./artifacts

      - name: Build and Run UnitTests
        shell: bash
        run: |
          dotnet build test/ManageMint.UnitTests/ManageMint.UnitTests.csproj
          dotnet test test/ManageMint.UnitTests/ManageMint.UnitTests.csproj --no-build --verbosity normal

      - name: Get Latest Tag
        id: get_latest_tag
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: tags } = await github.git.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const latestTag = tags[0].ref;
            const tagNumber = parseInt(latestTag.replace('refs/tags/v', ''));
            const newTag = `v${tagNumber + 1}`;
            console.log(`Latest tag: ${latestTag}, new tag: ${newTag}`);
            return newTag;
  
      - name: Draft Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ steps.get_latest_tag.outputs.result }},macos-arm64